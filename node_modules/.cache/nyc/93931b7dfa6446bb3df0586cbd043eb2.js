var cov_npfpnsx3h=function(){var path="D:\\nginx-1.14.0\\nginx-1.14.0\\FrontEnd\\karma.conf.js",hash="50c9f1b9b3b572ea40bde989a3f7a87f6eda5fec",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"D:\\nginx-1.14.0\\nginx-1.14.0\\FrontEnd\\karma.conf.js",statementMap:{"0":{start:{line:4,column:0},end:{line:78,column:1}},"1":{start:{line:5,column:2},end:{line:77,column:4}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:4,column:17},end:{line:4,column:18}},loc:{start:{line:4,column:34},end:{line:78,column:1}},line:4}},branchMap:{},s:{"0":0,"1":0},f:{"0":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_npfpnsx3h.s[0]++;// Karma configuration
// Generated on Mon Dec 31 2018 02:37:46 GMT+0700 (Western Indonesia Time)
module.exports=function(config){cov_npfpnsx3h.f[0]++;cov_npfpnsx3h.s[1]++;config.set({// base path that will be used to resolve all patterns (eg. files, exclude)
basePath:'',// frameworks to use
// available frameworks: https://npmjs.org/browse/keyword/karma-adapter
frameworks:['mocha','chai'],// list of files / patterns to load in the browser
files:[// 'assets/scripts/**/*.js',
'test/assets/scripts/**/*.js'],// list of files / patterns to exclude
exclude:[],// preprocess matching files before serving them to the browser
// available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor
preprocessors:{},// test results reporter to use
// possible values: 'dots', 'progress'
// available reporters: https://npmjs.org/browse/keyword/karma-reporter
reporters:['progress'],// web server port
port:9876,// enable / disable colors in the output (reporters and logs)
colors:true,// level of logging
// possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG
logLevel:config.LOG_INFO,// enable / disable watching file and executing tests whenever any file changes
autoWatch:true,// start these browsers
// available browser launchers: https://npmjs.org/browse/keyword/karma-launcher
browsers:['Chrome'],// Continuous Integration mode
// if true, Karma captures browsers, runs the tests and exits
singleRun:false,// Concurrency level
// how many browser should be started simultaneous
concurrency:Infinity,plugins:['karma-chai','karma-mocha','karma-chrome-launcher','karma-spec-reporter']});};